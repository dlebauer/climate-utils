\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\section*{Getting VPD from RNCEP}

The following code will take a while to download data from NOAA

<<get_rh,echo=FALSE,results=hide>>=
library(ClimateUtils)

data(worldmap)
library(ggmap)
world <- map_data("world")

gather <- function(var, lat = c(-60, 60), lon = c(0, 360), 
                   years = c(2000,2010),
                   months = c(6,8),
                   hours = c(6,18)){
  ans <- NCEP.gather(variable = var,
                     level = "surface",
                     months.minmax = months,
                     years.minmax  = years,
                     lat.southnorth = lat,
                     lon.westeast = lon,
                     reanalysis2 = FALSE,
                     return.units = TRUE,
                     status.bar = FALSE)
  return(ans)
  rm(list = ls())
  gc()
}     

ncep2dt <- function(ans){
  ans.dt <- data.table(NCEP.array2df(ans))
  ans.dt2 <- ans.dt[!substr(ans.dt$datetime, 12,13) == "00", 
                    list(date = ymd(substr(datetime, 1, 10)), 
                         latitude, longitude, variable1)]
  ans.dt3 <- ans.dt2[, list(mean = mean(variable1)), by = list(latitude, longitude)] 
  return(ans.dt3)
  rm(list = ls())
  gc()
}

## To download (many minutes):
## temp <- gather("air.sig995", 
##                lat = c(-90,90), 
##                c(-180,180), 
##                years = c(2002, 2012))
## rh   <-  gather("rhum.sig995", 
##                lat = c(-90,90), 
##                c(-180,180), 
##                years = c(2002, 2012))
## save(temp, rh, file="data/NCEP_RH_T.RData")
data(NCEP_RH_T)

rh.dt <- rh[,list(latitude, longitude, 
                  RH = mean, 
                  id = 1:length(latitude))]
temp.dt <- temp[,list(latitude, longitude, 
                      T = mean, 
                      id = 1:length(latitude))]
setkey(rh.dt, id)
setkey(temp.dt, id)

long.data <- rh.dt[temp.dt,
                   ][, list(latitude, longitude, RH, T,
                            VPD = get.vpd(RH, T - 272.15)), 
                     by = id]
vpdtiles <-    ggmap(worldmap) + 
  geom_tile(data = long.data, aes(longitude, latit, ude, fill = VPD), alpha = 0.65) +
  geom_text(data = long.data, aes(longitude, latitude, label = round(VPD))) + 
  ggtitle(label = "NCEP summer daytime VPD")

pdf(file = "NCEP_VPD.pdf", height = 18, width = 24)
vpdmap
dev.off()
### finished editing NCEP_VPD worldmap

require(sp)
rh.sp <- rh.df
coordinates(rh.sp) <- ~ latitude + longitude
gridded(rh.sp) <- TRUE
proj4string(rh.sp) <- CRS('+proj=longlat + datum=WGS84')



@ 

<<load_data>>=

@


<<calc_vpd>>=
# rh: JJA 6a-6p relative humidity (%)
# temp get JJA 6a-6p mean temp (C)
vpd <- get.vpd(rh, temp)
@


\section*{Using CRU-NCEP}

These data were obtained directly from the FetchClimate interface http://research.microsoft.com/en-us/um/cambridge/projects/fetchclimate/app/\#LT

<<cruncep>>=

## rh <- read.csv(system.file("inst/extdata/rh_grid.csv", 
##                            package = "ClimateUtils"), 
##                header = FALSE)
## temp <- read.csv(system.file("inst/extdata/temp_grid.csv", 
##                            package = "ClimateUtils"), 
##                  header = FALSE)
## rh[rh == -999] <- NA
## temp[temp == -999] <- NA
## lon <- rh[1,-1]
## lat <- rh[-1,1]
## rh <- rh[-1,-1]
## temp <- temp[-1,-1]
## rh.long <- wide2long(data.wide = rh, lat = lat, lon = lon, var = "RH")
## temp.long <- wide2long(temp, lat, lon, "Temp")

## vpd.long <- get.vpd(rh = rh.long$RH, temp=temp.long$Temp)

## long.data <- cbind(rh.long, 
##                    T = temp.long$Temp, 
##                    VPD = vpd.long)[-401:-420,] # removed because data at lon = 171.562 causing errors
## colnames(long.data) <- c("latitude", "longitude", "RH", "T", "VPD")
## save(lat, lon, long.data, file = "../data/CRU_VPD.RData")
data(CRU_VPD)

## worldmap <- get_map(c(-180, -60, 180, 60), source = "osm")
## save(worldmap, file = "data/worldmap.RData")
data(worldmap)

vpdtiles <- ggmap(worldmap) + 
  geom_tile(data = long.data, aes(longitude, latitude, fill = VPD), alpha = 0.65) +
  geom_text(data = long.data, aes(longitude, latitude, label = round(VPD))) + 
  ggtitle(label = "CRU summer daytime VPD")


pdf(file = "CRU_VPD.pdf", height = 18, width = 24)
vpdmap
dev.off()

@


\end{document}
